package org.csiro.igsn.entity.postgres;

// Generated 04/08/2015 2:17:37 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * CvSpatialreferences generated by hbm2java
 */
@Entity
@Table(name = "cv_spatialreferences")
public class CvSpatialreferences implements java.io.Serializable {

	private int spatialRefId;
	private int srsCode;
	private String srsName;
	private Boolean isGeographic;
	private String description;
	private Set<Samplingfeatures> samplingfeatureses = new HashSet<Samplingfeatures>(
			0);
	private Set<Sample> samplesForLatLongDatumId = new HashSet<Sample>(0);
	private Set<Sample> samplesForLocalProjectionId = new HashSet<Sample>(0);

	public CvSpatialreferences() {
	}

	public CvSpatialreferences(int spatialRefId, int srsCode, String srsName) {
		this.spatialRefId = spatialRefId;
		this.srsCode = srsCode;
		this.srsName = srsName;
	}

	public CvSpatialreferences(int spatialRefId, int srsCode, String srsName,
			Boolean isGeographic, String description,
			Set<Samplingfeatures> samplingfeatureses,
			Set<Sample> samplesForLatLongDatumId,
			Set<Sample> samplesForLocalProjectionId) {
		this.spatialRefId = spatialRefId;
		this.srsCode = srsCode;
		this.srsName = srsName;
		this.isGeographic = isGeographic;
		this.description = description;
		this.samplingfeatureses = samplingfeatureses;
		this.samplesForLatLongDatumId = samplesForLatLongDatumId;
		this.samplesForLocalProjectionId = samplesForLocalProjectionId;
	}

	@Id
	@Column(name = "spatial_ref_id", unique = true, nullable = false)
	@SequenceGenerator(name="cv_spatialreferences_spatial_ref_id_seq",sequenceName="cv_spatialreferences_spatial_ref_id_seq", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="cv_spatialreferences_spatial_ref_id_seq")
	public int getSpatialRefId() {
		return this.spatialRefId;
	}

	public void setSpatialRefId(int spatialRefId) {
		this.spatialRefId = spatialRefId;
	}

	@Column(name = "srs_code", nullable = false)
	public int getSrsCode() {
		return this.srsCode;
	}

	public void setSrsCode(int srsCode) {
		this.srsCode = srsCode;
	}

	@Column(name = "srs_name", nullable = false)
	public String getSrsName() {
		return this.srsName;
	}

	public void setSrsName(String srsName) {
		this.srsName = srsName;
	}

	@Column(name = "is_geographic")
	public Boolean getIsGeographic() {
		return this.isGeographic;
	}

	public void setIsGeographic(Boolean isGeographic) {
		this.isGeographic = isGeographic;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cvSpatialreferences")
	public Set<Samplingfeatures> getSamplingfeatureses() {
		return this.samplingfeatureses;
	}

	public void setSamplingfeatureses(Set<Samplingfeatures> samplingfeatureses) {
		this.samplingfeatureses = samplingfeatureses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cvSpatialreferencesByLatLongDatumId")
	public Set<Sample> getSamplesForLatLongDatumId() {
		return this.samplesForLatLongDatumId;
	}

	public void setSamplesForLatLongDatumId(Set<Sample> samplesForLatLongDatumId) {
		this.samplesForLatLongDatumId = samplesForLatLongDatumId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cvSpatialreferencesByLocalProjectionId")
	public Set<Sample> getSamplesForLocalProjectionId() {
		return this.samplesForLocalProjectionId;
	}

	public void setSamplesForLocalProjectionId(
			Set<Sample> samplesForLocalProjectionId) {
		this.samplesForLocalProjectionId = samplesForLocalProjectionId;
	}

}
